@using CaptrsCardGamePrototype.Models
@using System.Text.Encodings.Web

@if (cardBase != null) {
    
    <MudContainer MaxWidth="MaxWidth.ExtraSmall">
        <MudCard>
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Color="Color.Secondary">
                        <MudIcon Icon="@cardBase.icon"/>
                    </MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <CardBaseInfo cardBaseInfo="@cardBase"/>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default"/>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <MudPaper Height="400px" Class="pa-2">
                    <div id="unique_id_scroll_section" class="ma-0 d-flex flex-column gap-2" style="height:380px;overflow: auto;">
                        @if (cardBase.textContentSections != null) {
                            foreach (var textSection in cardBase.textContentSections) {
                                <MudText Class="pa-4" Typo="Typo.body1">
                                    @if (!cardBase.isSpecialText) {
                                        @textSection
                                    }
                                    @if (cardBase.isSpecialText) {
                                        @((MarkupString) textSection)
                                    }
                                    @* @((MarkupString) textSection) *@
                                </MudText>
                            }
                        }
                    </div>
                </MudPaper>
            </MudCardContent>
            <MudCardActions>
                <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="Color.Default" />
                <MudIconButton Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
            </MudCardActions>
            
        </MudCard>
    </MudContainer>
    
}



@code {
    
    [Parameter]
    public CardBaseObj? cardBase { get; set; }

    private bool _stateToggle;

    [Parameter]
    public bool stateToggle {
        get => _stateToggle;
        set {
            _stateToggle = value;
            OnStateChangedEvent();
        }
    }
    
    private void OnStateChangedEvent() {
        StateHasChanged();
    }
    
}